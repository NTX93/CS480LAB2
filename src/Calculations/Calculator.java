/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Calculations;
import java.util.Stack;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;


/**
 *
 * @author NobleTalal
 */
public class Calculator extends javax.swing.JFrame {

    double firstNum;
    double secondNum;
    double result;
    String operation;
    /**
     * Creates new form Calculator
     */
    public Calculator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTxtDisplay = new javax.swing.JTextField();
        btnPL = new javax.swing.JButton();
        btnPR = new javax.swing.JButton();
        btnPower = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btnMult = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btnDiv = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btnMinus = new javax.swing.JButton();
        btnC = new javax.swing.JButton();
        btn0 = new javax.swing.JButton();
        btnPlus = new javax.swing.JButton();
        btnEquals = new javax.swing.JButton();
        btnBackspace = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTxtDisplay.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        jTxtDisplay.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtDisplayActionPerformed(evt);
            }
        });

        btnPL.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnPL.setText("(");
        btnPL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPLActionPerformed(evt);
            }
        });

        btnPR.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnPR.setText(")");
        btnPR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPRActionPerformed(evt);
            }
        });

        btnPower.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnPower.setText("^");
        btnPower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPowerActionPerformed(evt);
            }
        });

        btn7.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btn7.setText("7");
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn8.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btn8.setText("8");
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn9.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btn9.setText("9");
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        btnMult.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnMult.setText("*");
        btnMult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultActionPerformed(evt);
            }
        });

        btn4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btn4.setText("4");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btn5.setText("5");
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btn6.setText("6");
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btnDiv.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnDiv.setText("/");
        btnDiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDivActionPerformed(evt);
            }
        });

        btn1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btn1.setText("1");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btn2.setText("2");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btn3.setText("3");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btnMinus.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnMinus.setText("-");
        btnMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinusActionPerformed(evt);
            }
        });

        btnC.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnC.setText("C");
        btnC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCActionPerformed(evt);
            }
        });

        btn0.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btn0.setText("0");
        btn0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn0ActionPerformed(evt);
            }
        });

        btnPlus.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnPlus.setText("+");
        btnPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlusActionPerformed(evt);
            }
        });

        btnEquals.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnEquals.setText("=");
        btnEquals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEqualsActionPerformed(evt);
            }
        });

        btnBackspace.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnBackspace.setText("<-");
        btnBackspace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackspaceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDiv, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnPL, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPR, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPower, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnMult, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnMinus, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnEquals, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnC, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn0, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnBackspace, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPlus, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(21, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTxtDisplay)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTxtDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPL, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPR, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPower, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMult, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDiv, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMinus, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnC, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn0, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBackspace, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnPlus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEquals, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        jTxtDisplay.setEditable(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTxtDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtDisplayActionPerformed
        
    }//GEN-LAST:event_jTxtDisplayActionPerformed

    private void btnPRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPRActionPerformed
        // TODO add your handling code here:
         String txt = jTxtDisplay.getText();
         if (!txt.contains("("))
             jTxtDisplay.setText("Syntax Error");
         else
            jTxtDisplay.setText(txt + ")");
    }//GEN-LAST:event_btnPRActionPerformed

    private void btnPowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPowerActionPerformed
         
        String txt = jTxtDisplay.getText();
        
           if (txt.endsWith("" + '+') || txt.endsWith("" + '-') || txt.endsWith("" + '*') || txt.endsWith("" + '/') || txt.endsWith("" + '^')|| txt.endsWith("" + '('))
            jTxtDisplay.setText("Syntax Error");
            else
               jTxtDisplay.setText(txt + "^");
            operation = "^";
        
    }//GEN-LAST:event_btnPowerActionPerformed

    private void btnPLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPLActionPerformed
        //String Enternumber = jTxtDisplay.getText() + btnPL.getText();
        String txt = jTxtDisplay.getText();
        jTxtDisplay.setText(txt + "(");
    }//GEN-LAST:event_btnPLActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
         String Enternumber = jTxtDisplay.getText() + btn7.getText();
        jTxtDisplay.setText(Enternumber);
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
         String Enternumber = jTxtDisplay.getText() + btn8.getText();
        jTxtDisplay.setText(Enternumber);
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
         String Enternumber = jTxtDisplay.getText() + btn9.getText();
        jTxtDisplay.setText(Enternumber);
    }//GEN-LAST:event_btn9ActionPerformed

    private void btnMultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMultActionPerformed
         
        String txt = jTxtDisplay.getText();
        
           if (txt.endsWith("" + '+') || txt.endsWith("" + '-') || txt.endsWith("" + '*') || txt.endsWith("" + '/') || txt.endsWith("" + '^')|| txt.endsWith("" + '('))
            jTxtDisplay.setText("Syntax Error");
            else
               jTxtDisplay.setText(txt + "*");
            operation = "*";
        
    }//GEN-LAST:event_btnMultActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
         String Enternumber = jTxtDisplay.getText() + btn4.getText();
        jTxtDisplay.setText(Enternumber);
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
         String Enternumber = jTxtDisplay.getText() + btn5.getText();
        jTxtDisplay.setText(Enternumber);
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
         String Enternumber = jTxtDisplay.getText() + btn6.getText();
        jTxtDisplay.setText(Enternumber);
    }//GEN-LAST:event_btn6ActionPerformed

    private void btnDivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDivActionPerformed
       
        String txt = jTxtDisplay.getText();
        
           if (txt.endsWith("" + '+') || txt.endsWith("" + '-') || txt.endsWith("" + '*') || txt.endsWith("" + '/') || txt.endsWith("" + '^')|| txt.endsWith("" + '('))
            jTxtDisplay.setText("Syntax Error");
            else
               jTxtDisplay.setText(txt + "/");
            operation = "/";
        
    }//GEN-LAST:event_btnDivActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
         String Enternumber = jTxtDisplay.getText() + btn1.getText();
        jTxtDisplay.setText(Enternumber);
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
         String Enternumber = jTxtDisplay.getText() + btn2.getText();
        jTxtDisplay.setText(Enternumber);
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
         String Enternumber = jTxtDisplay.getText() + btn3.getText();
        jTxtDisplay.setText(Enternumber);
    }//GEN-LAST:event_btn3ActionPerformed

    private void btnMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinusActionPerformed
        
        String txt = jTxtDisplay.getText();
        
           if (txt.endsWith("" + '+') || txt.endsWith("" + '-') || txt.endsWith("" + '*') || txt.endsWith("" + '/') || txt.endsWith("" + '^') || txt.endsWith("" + '('))
            jTxtDisplay.setText("Syntax Error");
            else
               jTxtDisplay.setText(txt + "-");
            operation = "-";
        
    }//GEN-LAST:event_btnMinusActionPerformed

    private void btnCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCActionPerformed
      
        jTxtDisplay.setText("");
    }//GEN-LAST:event_btnCActionPerformed

    private void btn0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn0ActionPerformed
         String Enternumber = jTxtDisplay.getText() + btn0.getText();
        jTxtDisplay.setText(Enternumber);
    }//GEN-LAST:event_btn0ActionPerformed

    private void btnPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlusActionPerformed

        String txt = jTxtDisplay.getText();
        
           // firstNum = Double.parseDouble(jTxtDisplay.getText());
           if (txt.endsWith("" + '+') || txt.endsWith("" + '-') || txt.endsWith("" + '*') || txt.endsWith("" + '/') || txt.endsWith("" + '^') || txt.endsWith("" + '('))
            jTxtDisplay.setText("Syntax Error");
            else
               jTxtDisplay.setText(txt + "+");
            operation = "+";
        
       
            //jTxtDisplay.setText(txt + "+");
        
    }//GEN-LAST:event_btnPlusActionPerformed

    private void btnEqualsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEqualsActionPerformed
        
        String answer;
        //secondNum = Double.parseDouble(jTxtDisplay.getText());
        String txt = jTxtDisplay.getText();
        char [] check = txt.toCharArray();
        boolean correctSyntax = true;
        int lp = 0, rp = 0;
        for (int i=0; i < check.length; i++)
        {
            if (check[i] == '(')
            {
                lp++;
            }
            if (check[i] == ')')
            {
                rp++;
            }
            
        }
        
        if (!txt.contains("" + '+') && !txt.contains("" + '-') && !txt.contains("" + '*') && !txt.contains("" + '/'))
            jTxtDisplay.setText("Syntax Error");
        if (txt.endsWith("" + '+') || txt.endsWith("" + '-') || txt.endsWith("" + '*') || txt.endsWith("" + '/'))
            jTxtDisplay.setText("Syntax Error");
            
        
        if (lp != rp)
        {
            jTxtDisplay.setText("Syntax Error");
            
            //return;
        }
        else if(txt.contains("Syntax Error") || txt.contains("Undefined"))
        {
            btnEquals.disable();
        }
        else
        {
            Stack<String> opstack = new Stack<String>();
            ArrayList<String> output = new ArrayList<String>();
           for(int i=0; i < check.length; i++)
            {
                boolean operator;
                if (check[i] == '+' || check[i] == '-' || check[i] == '*' || check[i] == '/' || check[i] == '%' || check[i] == '^')
                    operator = true;
                else
                    operator = false;
               
                
                if (check[i] != '+' && check[i] != '-' && check[i] != '*' && check[i] != '/' && check[i] != '%' && check[i] != '^'  && check[i] != ')' && check[i] != '(')
                {

                    int index = i;
                    String num = "";
                    while (check[index] != '+' && check[index] != '-' && check[index] != '*' && check[index] != '/' && check[index] != '%' && check[index] != ')' && check[index] != '(' && check[index] != '^')
                    {                        
                        num = num + check[index];
                        index++;         
                        if (index >= check.length)
                            break;
                    }
                    output.add(output.size(), "" + num);
                    i = index -1;

                    //output.add(output.size(), "" + check[i]);
                }
                else if (check[i] == '(')
                {
                    if (check[i-1] != '+' && check[i-1] != '-' && check[i-1] != '*' && check[i-1] != '/' && check[i-1] != '%' && check[i-1] != '^' )
                        opstack.push("*");
                    opstack.push("" + check[i]);
                    
                }
                
                else if (check[i] == ')')
                   {
                      // int index = i;
                       while (!opstack.peek().equals("("))
                       {
                           if (check[i] != '(')
                                output.add(output.size(), opstack.peek());
                           opstack.pop();
                       }
                   }
                else if (check[i] == '+' || check[i] == '-' || check[i] == '*' || check[i] == '/' || check[i] == '%' || check[i] == '^' )
                {
                    if (check[i] == '*' || check[i] == '/')
                    {
                        if (opstack.isEmpty())
                            opstack.push("" + check[i]);
                            
                        else if (opstack.peek().equals('^'))
                        {
                            output.add(output.size(), opstack.peek());
                            opstack.pop();
                            
                        }
                        else
                            opstack.push("" + check[i]);
                            
                        
                    }
                    else if (check[i] == '+' || check[i] == '-')
                    {
                        if (opstack.isEmpty())
                            opstack.push("" + check[i]);
                        
                        else if (opstack.peek().equals('*') || opstack.peek().equals('/') || opstack.peek().equals('^'))
                        {
                            output.add(output.size(), opstack.peek());
                            opstack.pop();
                        }
                        else
                            opstack.push("" + check[i]);
                        }
                    else
                        opstack.push("" + check[i]);
                    }
                   
                   }
            
                   /*
                    else
                       opstack.push("" + check[i]);
*/
                      for (int i=0; i < output.size(); i++)
                          System.out.println(output.get(i));
               
            
            
            while (!opstack.isEmpty())
            {
                if (!opstack.peek().equals("(") && !opstack.peek().equals(")"))
                    output.add(output.size(), opstack.peek());
                opstack.pop();
            }
            /////////////////////
            
           boolean digit = false;
            Stack<String> operandStack = new Stack<String>();
            for (int i=0; i < output.size(); i++)
            {
                System.out.println("output array at: " + i + " is " + output.get(i));
                for (int j=0; j < output.get(i).length(); j++)
                {
                    if (Character.isDigit(output.get(i).charAt(j)))
                        digit = true;
                    else
                        digit = false;
                }
               // System.out.println("state of digit is " + digit);
                
                if (digit == true)
                {
                    operandStack.push(output.get(i));
                    
                }
                else
                {
                    
                    String operation = output.get(i);
                    double num2 = Double.parseDouble(operandStack.peek());
                    operandStack.pop();
                    double num1 = Double.parseDouble(operandStack.peek());
                    operandStack.pop();
                    
                   // System.out.println("num1 is " + num1 + "num2 is " + num2);
                    
                    if (operation.equals("+"))
                    {
                        result = num1 + num2;
                        answer = String.format("%.0f", result);
                        //jTxtDisplay.setText(answer);
                        operandStack.push(answer);
                        
                        //System.out.println("DONE");
                    }
                    else if (operation.equals("-"))
                    {
                        result = num1 - num2;
                        answer = String.format("%.0f", result);
                        operandStack.push(answer);
                    }
                    else if (operation.equals("*"))
                    {
                        result = num1 * num2;
                        answer = String.format("%.0f", result);
                        operandStack.push(answer);
                    }
                    else if (operation.equals("/"))
                    {
                        if (num2 == 0)
                        {
                            jTxtDisplay.setText("Undefined");

                        }
                        else
                        {
                            result = num1 / num2;
                            answer = String.format("%.0f", result);
                            operandStack.push(answer);
                        }
                    }
                    else if (operation.equals("^"))
                    {
                        result = java.lang.Math.pow(num1, num2);
                        answer = String.format("%.0f", result);
                        operandStack.push(answer);
                        
                    }
                }
                
                
                
                
                    
            }
            jTxtDisplay.setText(operandStack.peek());
            
        }
            
        /*    
        if (operation == "+")
        {
            result = firstNum + secondNum;
            answer = String.format("%.0f", result);
            jTxtDisplay.setText(answer);
        }
        else if (operation == "-")
        {
            result = firstNum - secondNum;
            answer = String.format("%.0f", result);
            jTxtDisplay.setText(answer);
        }
        else if (operation == "*")
        {
            result = firstNum * secondNum;
            answer = String.format("%.0f", result);
            jTxtDisplay.setText(answer);
        }
        else if (operation == "/")
        {
            if (secondNum == 0)
            {
                jTxtDisplay.setText("Undefined");

            }
            else
            {
                result = firstNum / secondNum;
                answer = String.format("%.0f", result);
                jTxtDisplay.setText(answer);
            }
        }
        else if (operation == "^")
        {
            result = java.lang.Math.pow(firstNum, secondNum);
            answer = String.format("%.0f", result);
            jTxtDisplay.setText(answer);
        }
            
        
       */
       
    }//GEN-LAST:event_btnEqualsActionPerformed

    private void btnBackspaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackspaceActionPerformed
        String Enternumber = jTxtDisplay.getText();
        if (Enternumber.length() != 0)
            Enternumber = Enternumber.substring(0, Enternumber.length() - 1);
        jTxtDisplay.setText(Enternumber);
    }//GEN-LAST:event_btnBackspaceActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn0;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnBackspace;
    private javax.swing.JButton btnC;
    private javax.swing.JButton btnDiv;
    private javax.swing.JButton btnEquals;
    private javax.swing.JButton btnMinus;
    private javax.swing.JButton btnMult;
    private javax.swing.JButton btnPL;
    private javax.swing.JButton btnPR;
    private javax.swing.JButton btnPlus;
    private javax.swing.JButton btnPower;
    private javax.swing.JTextField jTxtDisplay;
    // End of variables declaration//GEN-END:variables
}
